<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- Find all the Badges that were assigned User -->

    <bean id="findBadgesByUserId" class="java.lang.String">
        <constructor-arg value="

            SELECT badge.* FROM user_badge AS ub

                JOIN badge AS b ON ub.badge_id = b.id

                JOIN user AS u ON ub.user_id = u.id

            WHERE u.id = :userId
        "/>
    </bean>


    <!-- Find all Question by User id -->

    <bean id="findQuestionsByUserId" class="java.lang.String">
        <constructor-arg value="

            SELECT qs.*, ua.*

            FROM question AS qs

                JOIN user_activity AS ua ON ua.id = qs.id

            WHERE ua.type = 'QUESTION' AND ua.id = :userId AND ua.active = TRUE

            ORDER BY ua.created DESC
        "/>
    </bean>


    <!-- Find all Question by array of Tag names -->

    <bean id="findQuestionsByTags" class="java.lang.String">
        <constructor-arg value="

            SELECT qs.*, ua.* FROM question AS qs

                JOIN user_activity AS ua ON ua.id = qs.id

                JOIN question_tag AS qt ON qt.qt_id = qs.id

                JOIN tag AS t ON qt.tag_id = t.id

            WHERE t.name IN (:tags) AND ua.active = TRUE

            GROUP BY qs.id

            HAVING COUNT(tag_id) >= :tagCount

            ORDER BY ua.created DESC
        "/>
    </bean>


    <!-- Find Questions by key words -->

    <bean id="findQuestionsByKeyWords" class="java.lang.String">
        <constructor-arg value="

            SELECT qs.*, ua.*

            FROM question AS qs

                JOIN user_activity AS ua ON ua.type = 'QUESTION'

            WHERE qs.id = ua.id AND ua.active = TRUE
        "/>
    </bean>


    <!-- User user_activity -->

    <bean id="userActivityQuery" class="java.lang.String">
        <constructor-arg value="
            SELECT
                ua.id, ua.type, ua.created, ua.active, ua.content,
                qs.title, a.accepted

            FROM user_activity AS ua

                LEFT JOIN user AS u ON u.id = ua.id

                LEFT JOIN question AS qs ON qs.id = ua.id

                LEFT JOIN comment AS cm ON cm.id = ua.id

                LEFT JOIN answer AS a ON a.id = ua.id

            WHERE u.id = ?
        "/>
    </bean>


    <!-- Load limit set of Questions -->

    <bean id="loadQuestionsSet" class="java.lang.String">
        <constructor-arg value="

            SELECT ua.*, qs.* FROM question AS qs

                JOIN user_activity AS ua ON ua.id = qs.id

            WHERE ua.type = 'QUESTION' AND ua.active = TRUE

            ORDER BY ua.created DESC

            LIMIT :offset, 10
        "/>
    </bean>


    <!-- Load limit set of Questions -->

    <bean id="findUsersByName" class="java.lang.String">
        <constructor-arg value="

            SELECT * FROM user

            WHERE enabled = TRUE AND name LIKE :username

            ORDER BY joined DESC

            LIMIT :offset, 36
        "/>
    </bean>


    <!-- Find all Answers by User id -->

    <bean id="findAnswersByUserId" class="java.lang.String">
        <constructor-arg value="

            SELECT a.*, ua.* FROM answer AS a

                JOIN user_activity AS ua ON ua.id = a.id

            WHERE ua.type = 'ANSWER' AND ua.id = :userId AND ua.active IS TRUE

            ORDER BY ua.created DESC
        "/>
    </bean>


    <!-- Find all Answers by Question id -->

    <bean id="findAnswersByQuestionId" class="java.lang.String">
        <constructor-arg value="

            SELECT a.*, ua.* FROM answer AS a

                JOIN user_activity AS ua ON ua.id = a.id

                JOIN question AS qs ON qs.id = a.qt_id

            WHERE ua.type = 'ANSWER' AND qs.id = :questionId AND ua.active IS TRUE
        "/>
    </bean>


    <!-- Find all Comments by Question id -->

    <bean id="findCommentsByQuestionId" class="java.lang.String">
        <constructor-arg value="

            SELECT cm.*, ua.*

            FROM comment AS cm

                JOIN user_activity AS ua ON ua.id = cm.id

                JOIN question AS qs ON qs.id = cm.qt_id

            WHERE ua.type = 'COMMENT' AND qs.id = :questionId

            ORDER BY ua.created
        "/>
    </bean>
</beans>