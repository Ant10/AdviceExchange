<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- Find all the Badges that were assigned User -->

    <bean id="findBadgesByUserId" class="java.lang.String">
        <constructor-arg index="0" value="

            SELECT badge.* FROM badge

                JOIN user_badge ON ub_badge_id = bdg_id

                JOIN user ON ub_user_id = user_id

            WHERE user_id = :userId
        "/>
    </bean>


    <!-- Find all Question by User id -->

    <bean id="findQuestionsByUserId" class="java.lang.String">
        <constructor-arg index="0" value="

            SELECT question.*, user_activity.*

            FROM question

                JOIN user_activity ON ua_id = qs_id

            WHERE ua_type = 'QUESTION' AND ua_user_id = :userId AND ua_active = TRUE
        "/>
    </bean>


    <!-- Find all Question by array of Tag names -->

    <bean id="findQuestionsByTags" class="java.lang.String">
        <constructor-arg index="0" value="

            SELECT question.*, user_activity.* FROM question

                JOIN user_activity ON ua_id = qs_id

                JOIN question_tag ON qt_question_id = qs_id

                JOIN tag ON qt_tag_id = tag_id

            WHERE tag_name IN (:tags) AND ua_active = TRUE

            GROUP BY qs_id

            HAVING COUNT(tag_id) >= :tagCount

            ORDER BY ua_created DESC
        "/>
    </bean>


    <!-- Load limit set of Questions -->

    <bean id="loadQuestionsSet" class="java.lang.String">
        <constructor-arg value="

            SELECT user_activity.*, question.* FROM question

                JOIN user_activity ON ua_id = qs_id

            WHERE ua_type = 'QUESTION' AND ua_active = TRUE

            ORDER BY ua_created DESC

            LIMIT :offset, 10
        "/>
    </bean>


    <!-- Load limit set of Questions -->

    <bean id="loadUserSet" class="java.lang.String">
        <constructor-arg value="

            SELECT * FROM user

            WHERE user_enabled = TRUE AND user_name LIKE :username

            ORDER BY user_joined DESC

            LIMIT :offset, 10
        "/>
    </bean>


    <!-- Find all Answers by User id -->

    <bean id="findAnswersByUserId" class="java.lang.String">
        <constructor-arg index="0" value="

            SELECT answer.*, user_activity.* FROM answer

                JOIN user_activity ON ua_id = asw_id

            WHERE ua_type = 'ANSWER' AND ua_user_id = :userId AND ua_active = TRUE
        "/>
    </bean>


    <!-- Find all Answers by Question id -->

    <bean id="findAnswersByQuestionId" class="java.lang.String">
        <constructor-arg index="0" value="

            SELECT answer.*, user_activity.* FROM answer

                JOIN user_activity ON ua_id = asw_id

                JOIN question ON qs_id = asw_question_id

            WHERE ua_type = 'ANSWER' AND qs_id = :questionId AND ua_active = TRUE

            ORDER BY asw_votes DESC
        "/>
    </bean>


    <!-- Find all Comments by Question id -->

    <bean id="findCommentsByQuestionId" class="java.lang.String">
        <constructor-arg index="0" value="

            SELECT comment.*, user_activity.*

            FROM comment

                JOIN user_activity ON ua_id = cm_id

                JOIN question ON qs_id = cm_question_id

            WHERE ua_type = 'COMMENT' AND qs_id = :questionId

            ORDER BY ua_created
        "/>
    </bean>
</beans>